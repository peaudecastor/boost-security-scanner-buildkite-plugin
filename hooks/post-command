#!/bin/bash

set -e
set -o pipefail
set -u

#
# State
#
declare -a TMP_FILES
declare CONTAINER_ID

#
# Defaults
#
BOOST_SCANNER_VERSION=latest
BOOST_DOCKER_IMAGE=227492184095.dkr.ecr.us-east-2.amazonaws.com/checks-runner
ENV_PREFIX=BUILDKITE_PLUGIN_BOOST_SECURITY_SCANNER

#
# Helpers
#
env.list ()
{ awk 'BEGIN{for(v in ENVIRON) print v}'; }

env.plugin_list ()
{ env.list | grep "${ENV_PREFIX}"; }

env.plugin_export_for_docker ()
{
  declare tmp=$(tmp.create env)

  while read name; do
    echo "${name/${ENV_PREFIX}/BOOST}=${!name:-}" >> "${tmp}"
  done < <(env.plugin_list)

  echo "${tmp}"
}

tmp.create ()
{ # $1=label
  TMP_FILES+=($(mktemp /tmp/boost-scanner.${1}.XXXXXX))
  echo "${TMP_FILES[-1]}"
}

tmp.clean ()
{
  for file in "${TMP_FILES[@]:-}"; do
    rm -f "${file}"
  done

  TMP_FILES=()
}

container.stop ()
{
  if [ -n "${CONTAINER_ID:-}" ]; then
    docker stop "${CONTAINER_ID}"

    unset CONTAINER_ID
  fi
}

#
# Main
#
main.exit ()
{
  container.stop
  tmp.clean
}

main ()
{
  set -x
  trap 'main.exit' EXIT

  # Import default BuildKite variables
  BOOST_ORG_NAME=${BUILDKITE_ORGANIZATION_SLUG:-}
  BOOST_REPO_NAME=${BUILDKITE_PIPELINE_SLUG:-}
  BOOST_BRANCH_NAME=${BUILDKITE_BRANCH:-}

  # Import plugin configuration variables
  ENV_FILE=$(env.plugin_export_for_docker)
  cat "${ENV_FILE}"
  source "${ENV_FILE}"
  
  # Define command to execute
  declare -a ARGS
  BOOST_PROJECT_NAME="${BOOST_ORG_NAME}/${BOOST_REPO_NAME}"
  CID_FILE=$(tmp.create cid)

  ARGS=(create
    --cidfile "${CID_FILE}"
    --env-file "${ENV_FILE}"
    --entrypoint boost
    --rm
    "${BOOST_DOCKER_IMAGE}:${BOOST_SCANNER_VERSION}"
    scan repo "${BOOST_PROJECT_NAME}" "${BOOST_BRANCH_NAME}" HEAD
    ${BOOST_ADDITIONAL_ARGS:-}
  )

  docker "${ARGS[@]}"
  CONTAINER_ID=$(cat "${CID_FILE}")

  docker cp "${BUILDKITE_BUILD_CHECKOUT_PATH}" "${CONTAINER_ID}:/app/mount"
  docker start --attach "${CONTAINER_ID}"
}

main

