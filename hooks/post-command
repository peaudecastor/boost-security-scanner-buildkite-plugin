#!/bin/bash

set -e
set -o pipefail
set -u

#
# State
#
declare -a TMP_FILES
declare CONTAINER_ID

#
# Defaults
#
BOOST_SCANNER_VERSION=latest
BOOST_DOCKER_IMAGE=227492184095.dkr.ecr.us-east-2.amazonaws.com/checks-runner
VAR_PREFIX=BUILDKITE_PLUGIN_BOOST_SECURITY_SCANNER

#
# Helpers
#
container.stop ()
{
  if [ -n "${CONTAINER_ID:-}" ]; then
    docker stop "${CONTAINER_ID}" > /dev/null

    unset CONTAINER_ID
  fi
}

env.list ()
{ awk 'BEGIN{for(v in ENVIRON) print v}'; }

param.default ()
{ # $1=param_suffix $2=default
  declare param="${VAR_PREFIX}_${1}"
  [ -n "${!param+x}" ] || export "${param}=${2:-}"
}

param.boost_to_envfile ()
{
  declare tmp=$(tmp.create env)
  echo "${tmp}"

  while read name; do
    echo "${name}=${!name:-}" >> "${tmp}"
  done < <(env.list | grep "BOOST_")
}

param.remap_prefix ()
{
  while read name; do
    export "${name/${VAR_PREFIX}/BOOST}=${!name:-}"
  done < <(env.list | grep "${VAR_PREFIX}_")
}

tmp.create ()
{ # $1=label
  TMP_FILES+=($(mktemp /tmp/boost-scanner.${1}.XXXXXX))
  echo "${TMP_FILES[-1]}"
}

tmp.clean ()
{
  for file in "${TMP_FILES[@]:-}"; do
    rm -f "${file}"
  done

  TMP_FILES=()
}

#
# Main
#
main.exit ()
{
  container.stop
  tmp.clean
}

main ()
{
  trap 'main.exit' EXIT

  # Import default BuildKite variables
  param.default "ORG_NAME" "${BUILDKITE_ORGANIZATION_SLUG:-}"
  param.default "REPO_NAME" "${BUILDKITE_PIPELINE_SLUG:-}"
  param.default "BRANCH_NAME" "${BUILDKITE_BRANCH:-}"
  param.remap_prefix

  # Import plugin configuration variables
  ENV_FILE=$(param.boost_to_envfile)

  # Define command to execute
  BOOST_PROJECT_NAME="${BOOST_ORG_NAME}/${BOOST_REPO_NAME}"
  CID_FILE=$(tmp.create cid) ; rm -f "${CID_FILE}"

  declare -a ARGS ; ARGS=(create
    --cidfile "${CID_FILE}"
    --env-file "${ENV_FILE}"
    --entrypoint boost
    --rm
    "${BOOST_DOCKER_IMAGE}:${BOOST_SCANNER_VERSION}"
    scan repo "${BOOST_PROJECT_NAME}" "${BOOST_BRANCH_NAME}" HEAD
    ${BOOST_ADDITIONAL_ARGS:-}
  )

  set -x
  docker create  --cidfile "${CID_FILE}" --env-file "${ENV_FILE}" -ti "${BOOST_DOCKER_IMAGE}:${BOOST_SCANNER_VERSION}" bash
  #docker "${ARGS[@]}" > /dev/null
  CONTAINER_ID=$(cat "${CID_FILE}")

  docker cp "${BUILDKITE_BUILD_CHECKOUT_PATH}" "${CONTAINER_ID}:/app/mount/"
  echo "${CONTAINER_ID}"
  sleep 6000
  docker start --attach "${CONTAINER_ID}"
}

main
